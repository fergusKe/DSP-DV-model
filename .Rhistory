ls
ls()
cat "\014"
cat("\014")
a <- matrix(1:12, nrow=4);
a
b <- t(a)
b
a%*%b
crossprod(a,b)
crossprod(t(a),b)
diag(a)
diag(diag(a))
a2 <- diag(3) + 1;
a2
eigen(a2)
eigen(a2, symmetric=T)
matrix(1:12, nrow=3)
t<-matrix(1:12, nrow=3)
qr(t)
qr.R(qr(t))
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
tw$C_NAME
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
district_li
over(df_sp, li)
taipei$T_Name
over(df_sp, li)
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
district_li
li
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
district_li
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
result
district_li
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
result
over(df_sp, li)
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
result
district_li
district_li[1,237]
district_li[237,1]
district_li[237,2]
over(df_sp, li)
over(df_sp, li)[2]
over(df_sp, li)[2,1]
over(df_sp, li)(2,1)
typeof(over(df_sp, li))
over(df_sp, li)
over(df_sp, li)[2,1]
df_sp
li
over(df_sp, li)[0]
over(df_sp, li)[1]
over(df_sp, li)[1][0]
over(df_sp, li)[1][1]
over(df_sp, li)
as.matrix(over(df_sp,li))
as.matrix(over(df_sp,li))
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
as.matrix(over(df_sp,li))
town
district
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
colnames(dvas)
dvas$lng[1..10]
dvas$lng[1:10]
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
summary(locs)
source('~/Desktop/data/town/lat_to_town.r', encoding = 'UTF-8')
loc
district
output_csv <- cbind(district, town)
write.csv("/Users/brianpan/Desktop/data/district.csv")
write.csv(output_csv, file="/Users/brianpan/Desktop/data/district.csv")
cat("\104")
cat("\c04")
cat("\014")
ls
cat("\014")
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
summary(data_list)
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
summary(logistic_reg)
cat("\104")
cat("\014")
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
cat("\014")
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
summary(backward_count_reg)
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
read.csv("/Users/brianpan/Desktop/data/train.csv")
cat("\014")
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
package.install(dplyr)
install.packages(dplyr)
install.packages("dplyr")
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
source('~/Desktop/data/predict.r', encoding = 'UTF-8')
sample(data_list, 200, replace = TRUE)
sample(data_list, 200, replace = TRUE)$ACTIONID
head(sample(data_list, 200, replace = TRUE)$ACTIONID)
cat("\014")
install.packages("e1071")
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
colnames(train_data)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
train_data[OCCUPATION="無工作",]
train_data[train_data$OCCUPATION="無工作",]
train_data[train_data$OCCUPATION=無工作,]
train_data[train_data$OCCUPATION==無工作,]
train_data[train_data$OCCUPATION=="無工作",]
t <-train_data[train_data$OCCUPATION=="無工作",]
t <- transform(train_data, OCCUPATION.無工作= OCCUPATION=="無工作")
colnames(t)
t$OCCUPATION.無工作
cat("\014")
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
table(svm_result, y)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
table(y)
table(svm_result)
table(y, svm_result)
118/200
111/200
64/200
86/200
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
table(y, svm_result)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
summary(train_data)
summary(train_data)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
table(svm_result, y)
table(svm_result, y)[,1]
sum(table(svm_result, y)[,1])
106/sum(table(svm_result, y)[,1])
116/sum(table(svm_result, y)[,2])
77/sum(table(svm_result, y)[,3])
svm_model
summary(svm_model)
svm_model$coef0
svm_model$coef1
svm_model$coefs
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
summary(svm_model_after_tune)
table(pred_tune, y)
table(pred_tune, y)
cat("\014")
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
svm_model_after_tune <- svm(x, factor(y), kernel="radial", cost=10, gamma=2)
summary(svm_model_after_tune)
predict(svm_model_after_tune, x)
table(pred_tune, y)
plot(svm_model_after_tune, x)
svm_model_after_tune <- svm(x, factor(y), kernel="radial", cost=10, gamma=2)
plot(svm_model_after_tune, x)
iris
header(iris)
head(iris)
plot(svm_model_after_tune, x, 家暴因素.照顧壓力 ~ 家暴因素.子女教養問題)
head(x)
plot(svm_model_after_tune, x, "家暴因素.照顧壓力" ~ "家暴因素.子女教養問題")
combined_data <- cbind(y,x)
plot(svm_model_after_tune, combined_data, 家暴因素.照顧壓力 ~ 家暴因素.子女教養問題)
y
head(y)
x
head(x)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
plot(svm_model_after_tune, combined_data, EDUCATION~家暴因素.照顧壓力)
head(combined_data)
plot(svm_model_after_tune, combined_data)
plot(svm_model_after_tune, combined_data, formula=家暴因素.照顧壓力~家暴因素.子女教養問題)
plot(svm_model_after_tune, combined_data, formula=combined_data["家暴因素.照顧壓力"]~combined_data["家暴因素.子女教養問題"])
plot(svm_model_after_tune, combined_data, formula=家暴因素.照顧壓力~家暴因素.子女教養問題,
slice = list( 家暴因素.照顧壓力= 3, 家暴因素.子女教養問題 = 4))
plot(svm_model_after_tune, combined_data, formula=a~b)
plot(svm_model_after_tune, combined_data, formula=家暴因素.照顧壓力~家暴因素.子女教養問題)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
summary(svm_model_after_tune)
plot(svm_model_after_tune, data=dataset, formula=家暴因素.照顧壓力~家暴因素.子女教養問題)
plot(svm_model_after_tune, data=dataset, formula=家暴因素.照顧壓力~家暴因素.子女教養問題)
plot(svm_model_after_tune, data=dataset, formula=家暴因素.照顧壓力~家暴因素.子女教養問題,slice=list(家暴因素.照顧壓力=3, 家暴因素.子女教養問題=4))
dataset
summary(dataset)
data(cats)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
head(testdata)
head(data_list)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
names(datalist)
names(data_list)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
sample(1:100, 10)
nrow(data_list)
testset <-testdata[sample(nrow(testdata), 500),]
testset
testset <-testdata[sample(nrow(testdata), 500),]
test_y <- testset$Count_plus
test_x <- subset(testdata, select=-Count_plus)
pred_tune <- predict(svm_model_after_tune, test_x)
table(pred_tune, test_y)
summary(testset)
test_x
summary(test_x)
summary(x)
pred_tune <- predict(svm_model_after_tune, x)
pred_tune
pred_tune <- predict(svm_model_after_tune, test_x)
pred_tune
table(pred_tune, test_y)
test_y
length(pred_tune)
length(test_y)
test_y <- testset$Count_plus
test_x <- subset(testset, select=-Count_plus)
pred_tune <- predict(svm_model_after_tune, test_x)
table(pred_tune, test_y)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
table(pred_tune, test_y)
data_list$Count_plus <- ifelse(data_list$Count.處遇中>2, 3, ifelse(data_list$Count.處遇中==2,2, iflse(data_list$Count.處遇中==1,1,NA)))
data_list$Count.處遇中 <- ifelse(data_list$Count.處遇中>2, 3, ifelse(data_list$Count.處遇中==2,2, iflse(data_list$Count.處遇中==1,1,NA)))
data_list$Count.處遇中
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
summary(dataset$Count_plus)
table(pred_tune, test_y)
summary(testdata)
testdata$Count_plus
names(data_list)
source('~/Desktop/data/svm_train.r', encoding = 'UTF-8')
summary(testdata)
table(pred_tune, test_y)
pred_tune
table(pred_tune, test_y)
length(test_y)
(206+41+10)/500
plot(svm_model_after_tune, testset, 家暴因素.照顧壓力~家暴因素.子女教養問題)
plot(svm_model_after_tune, testset, 家暴因素.照顧壓力~家暴因素.子女教養問題, slice=list(家暴因素.照顧壓力=3,家暴因素.子女教養問題=4))
names(testset)[12]
names(testset)[10]
length(testset$TIPVDA)
length(testset$OCCUPATION.不詳)
summart(testset$TIPVDA)
summary(testset$TIPVDA)
summary(testset$OCCUPATION.不詳)
plot(svm_model_after_tune, testset, 家暴因素.照顧壓力~家暴因素.子女教養問題, slice=list(家暴因素.照顧壓力=1,家暴因素.子女教養問題=2))
names(x)
source('~/Desktop/data/tree_predict.r', encoding = 'UTF-8')
names(x)
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
summary(x)
names(train_data)
summary(test_data)
source('~/Desktop/data/missing_val.r', encoding = 'UTF-8')
source('~/Desktop/data/missing_val.r', encoding = 'UTF-8')
source('~/Desktop/data/missing_val.r', encoding = 'UTF-8')
source('~/Desktop/data/missing_val.r', encoding = 'UTF-8')
summary(writed)
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
rf_predictors
source('~/Desktop/data/tree_predict.r', encoding = 'UTF-8')
rf_10_result
rfrf_10_result
summary(test_data)
source('~/Desktop/data/tree_predict.r', encoding = 'UTF-8')
rfrf_10_result
rfrf_10_result
predict(rfmodel_rf_10, test_data)
test_data$predict<-predict(rfmodel_rf_10, test_data)
test_data[which(predict==2),]$ACTIONID
test_data[test_data$predict==2,]$ACTIONID
dim(test_data[test_data$predict==2,]$ACTIONID)
length(test_data[test_data$predict==2,]$ACTIONID)
out<-data.frame(test_data[test_data$predict==2,]$ACTIONID, row.names<-c("ACTIONID"))
out
out<-data.frame(test_data[test_data$predict==2,]$ACTIONID)
out
names(out)
names(out)[1]
names(out)[1] <- "ACTIONID"
names(out)[1]
out
csv.write("/Users/brianpan/Desktop/data/rf_actionid.csv", out)
write.csv("/Users/brianpan/Desktop/data/rf_actionid.csv", out)
write.csv(out,"/Users/brianpan/Desktop/data/rf_actionid.csv")
test_data[test_data$predict==2&test_data$group==1,]
length(test_data[test_data$predict==2&test_data$group==1,])
rfrf_10_result
length(test_data[test_data$predict==2,])
predict(rfmodel_rf_10, test_data)
table(predict(rfmodel_rf_10, test_data))
test_data$result <- predict(rfmodel_rf_10, test_data)
length(test_data[test_data$result==2,])
table(test_data$result)
test_data$rd <- predict(rfmodel_rf_10, test_data)
table(test_data$rd)
table(predict(rfmodel_rf_10, test_data))
table(predict(rfmodel_rf_10, test_data))
length(test_data[test_data$rd==2,])
length(test_data[test_data$rd==1,])
ltest_data[test_data$rd==1,]
test_data[test_data$rd==1,]
dim(test_data[test_data$rd==1,])
dim(test_data[test_data$rd==2&test_data$group==1,])
out<-test_data[test_data$rd==2&test_data$group==1,]
d<-data.frame(out$ACTIONID)
names(d)
names(d)[0] <- "ACTIONID"
out
out
d
write.csv(out,"/Users/brianpan/Desktop/data/rfactionid.csv")
d<-data.frame(out$ACTIONID)
names(d)
names(d)[0] <- "ACTIONID"
write.csv(d,"/Users/brianpan/Desktop/data/rfactionid.csv")
source('~/Desktop/data/logit.r', encoding = 'UTF-8')
source('~/Desktop/data/logit.r', encoding = 'UTF-8')
source('~/Desktop/data/logit.r', encoding = 'UTF-8')
dv_logit
summary(dv_logit)
1848.9/2338.2
1-1848.9/2338.2
rfmodel_rf_10
names(x)
source('~/Desktop/data/eda.r', encoding = 'UTF-8')
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
rf_predictors
x
names(x)
x$X.1
source('~/Desktop/data/eda.r', encoding = 'UTF-8')
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
source('~/Desktop/data/eda.r', encoding = 'UTF-8')
source('~/Desktop/data/eda.r', encoding = 'UTF-8')
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
rf_predictors
RandomForestFeature
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
RandomForestFeature
rf_predictors
source('~/Desktop/data/tree_predict.r', encoding = 'UTF-8')
rfrf_10_result
rfmodel_rf_10
test_data$predict
<-test_data[test_data$predict==2 &test_data$group==1,]$ACTIONID
out<-test_data[test_data$predict==2 &test_data$group==1,]$ACTIONID
out
names(out)
d<-data.frame(out)
d
names(d)
names(d)[0] <- "ACTIONID"
names(d)
names(d)[1] <- "ACTIONID"
names(d)
write.csv(out, "/Users/brianpan/Desktop/data/rfactionid.csv")
rfmodel_rf_10
rfrf_10_result
head(d)
rfrf_10_result <- table(test_data$group, predict(rfmodel_rf_10, test_data))
rfrf_10_result
source('~/Desktop/data/eda.r', encoding = 'UTF-8')
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
RandomForestFeature
rf_predictors
source('~/Desktop/data/tree_predict.r', encoding = 'UTF-8')
rfmodel_rf_10
rfrf_10_result
rfrf_10_result <- table(test_data$group, predict(rfmodel_rf_10, test_data))
rfrf_10_result
source('~/Desktop/data/eda.r', encoding = 'UTF-8')
source('~/Desktop/data/feature_selection.r', encoding = 'UTF-8')
rf_predictors
RandomForestFeature
source('~/Desktop/data/tree_predict.r', encoding = 'UTF-8')
rfmodel_rf_10
rfrf_10_result <- table(test_data$group, predict(rfmodel_rf_10, test_data))
rfrf_10_result
action_ids<-test_data[test_data$predict==2 & test_data$group==1,]$ACTIONID
out<-data.frame(action_ids)
names(out)[0] <- "ACTIONID"
out_file <- "/Users/brianpan/Desktop/data/rf_actionid.csv"
write.csv(out, out_file)
